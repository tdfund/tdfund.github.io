{"version":3,"sources":["pages/Details/Details.js"],"names":["Content","DetailsComponent","className","useState","personData","setPersonData","setIncomeValue","dw","setDw","isLoading","setIsLoading","unRealizedPnl","setUnrealizedPnl","fundPnl","setFundPnl","user","useParams","useEffect","a","Promise","all","axios","get","person","data","dwData","reverse","map","item","i","key","unrealizedPnlResult","x","getNumberWithDecimal","fundPnlResult","incomeValue","fetchCharts","option","title","text","tooltip","trigger","legend","name","formatter","length","getNumberFormat","right","top","grid","left","bottom","containLabel","xAxis","type","splitLine","show","axisLine","lineStyle","color","yAxis","axisLabel","splitNumber","series","areaStyle","itemStyle","stack","showSymbol","hoverAnimation","columns","dataIndex","render","row","index","isNaN","toLocaleString","getNumberColor","columnsExchangeDetails","dayjs","format","price","amount","result","Number","gutter","sm","xs","style","marginBottom","value","len","getLastestDataHandleValue","precision","isNormal","suffix","getLastestDataShare","getLastestDataCost","showLoading","dataSource","reduce","acc","curr","arr","obj","date","cost","share","marketValue","Details","styled"],"mappings":"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","file":"static/js/6.c07e6b9a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Layout, Row, Divider, Card, Col, Table } from \"antd\";\nimport axios from \"axios\";\nimport echarts from \"echarts\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\nimport {\n  getNumberColor,\n  getNumberFormat,\n  getNumberWithDecimal,\n} from \"../../utils\";\nimport { Statistic, LineChart } from \"../../components\";\n\nconst { Content } = Layout;\n\nexport const DetailsComponent = ({ className }) => {\n  const [personData, setPersonData] = useState([]);\n  const [incomeValue, setIncomeValue] = useState([]);\n  const [dw, setDw] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [unRealizedPnl, setUnrealizedPnl] = useState([]);\n  const [fundPnl, setFundPnl] = useState([]);\n\n  const { user } = useParams();\n  useEffect(() => {\n    const fetchCharts = async () => {\n      const [{ data: person }, { data: dwData }] = await Promise.all([\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/accounts/${user}/main.json`\n        ),\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/accounts/${user}/dw.json`\n        ),\n      ]);\n      setPersonData(person);\n      setDw(\n        [...dwData].reverse().map((item, i) => {\n          return {\n            ...item,\n            key: i,\n          };\n        })\n      );\n      //用户未实现收益\n      const unrealizedPnlResult = person.map((x, i) => {\n        return [person[i][0] * 1000, getNumberWithDecimal(person[i][4], 1)];\n      });\n      //策略分成收益\n      const fundPnlResult = person.map((x, i) => {\n        return [person[i][0] * 1000, getNumberWithDecimal(person[i][10], 1)];\n      });\n      const incomeValue = person.map((x, i) => {\n        return [person[i][0] * 1000, getNumberWithDecimal(person[i][6], 1)];\n      });\n      setUnrealizedPnl(unrealizedPnlResult);\n      setFundPnl(fundPnlResult);\n      setIsLoading(false);\n      setIncomeValue(incomeValue);\n    };\n    fetchCharts();\n  }, [user]);\n\n  const option = {\n    title: {\n      text: \"持仓收益\",\n    },\n    tooltip: {\n      trigger: \"axis\",\n      // formatter: function (params) {\n      //   const date = new Date(params[0].data[0]);\n      //   const dateFormat = echarts.format.formatTime(\n      //     \"yyyy-MM-dd hh:mm:ss\",\n      //     date\n      //   );\n      //   var returnHtmT1 = params[0]\n      //     ? `${getNumberWithDecimal(params[0].data[1], 1)}`\n      //     : \"--\";\n      //   return `<span>${dateFormat}</span><br/><span>累计收益：${returnHtmT1}</span> <br/>`;\n      // },\n    },\n    legend: {\n      data: [\n        {\n          name: \"用户未实现收益\",\n          // 强制设置图形为圆。\n          // icon: \"circle\",\n        },\n        {\n          name: \"策略分成收益\",\n          // 强制设置图形为圆。\n          // icon: \"circle\",\n        },\n      ],\n      formatter: (name) => {\n        if (name === \"用户未实现收益\") {\n          return unRealizedPnl.length === 0\n            ? `${name} +0.0`\n            : `${name} ${getNumberFormat(\n                unRealizedPnl[unRealizedPnl.length - 1][1]\n              )}`;\n        }\n        if (name === \"策略分成收益\") {\n          return fundPnl.length === 0\n            ? `${name} +0.0`\n            : `${name} ${getNumberFormat(fundPnl[fundPnl.length - 1][1])}`;\n        }\n      },\n      right: 0,\n      top: 3,\n    },\n    grid: {\n      left: \"3%\",\n      right: \"4%\",\n      bottom: \"3%\",\n      containLabel: true,\n    },\n    xAxis: {\n      type: \"time\",\n      splitLine: {\n        show: false,\n      },\n      axisLine: {\n        lineStyle: {\n          color: \"#888\",\n        },\n      },\n    },\n    yAxis: {\n      type: \"value\",\n      axisLabel: {\n        show: true,\n        formatter: \"{value}\",\n      },\n      splitNumber: 3,\n      axisLine: {\n        lineStyle: {\n          color: \"#888\",\n        },\n      },\n    },\n    series: [\n      {\n        name: \"用户未实现收益\",\n        type: \"line\",\n        areaStyle: {},\n        data: unRealizedPnl,\n        itemStyle: {\n          color: \"rgb(73,151,247)\",\n        },\n        stack: \"总量\",\n        showSymbol: false,\n        hoverAnimation: true,\n      },\n      {\n        name: \"策略分成收益\",\n        type: \"line\",\n        areaStyle: {},\n        data: fundPnl,\n        itemStyle: {\n          color: \"rgb(105,193,111)\",\n        },\n        stack: \"总量\",\n        showSymbol: false,\n        hoverAnimation: true,\n      },\n    ],\n  };\n\n  const columns = [\n    {\n      title: \"日期\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    {\n      title: \"市值\",\n      dataIndex: \"marketValue\",\n      key: \"marketValue\",\n      render: (text, row, index) => {\n        return isNaN(text)\n          ? \"--\"\n          : getNumberWithDecimal(text, 1).toLocaleString();\n      },\n    },\n    {\n      title: \"收益额\",\n      dataIndex: \"incomeValue\",\n      key: \"incomeValue\",\n      render: (text) => {\n        return (\n          <span className={getNumberColor(text)}>{getNumberFormat(text)}</span>\n        );\n      },\n    },\n  ];\n\n  const userTableColumns = [\n    {\n      title: \"用户\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"总市值\",\n      dataIndex: \"total\",\n      render: (text) => text.toFixed(2),\n    },\n    {\n      title: \"未实现盈亏\",\n      dataIndex: \"unrealizedPnl\",\n      render: (text) => text.toFixed(2),\n    },\n    {\n      title: \"未分配收益\",\n      dataIndex: \"unrealizedAllocation\",\n      render: (text) => text.toFixed(2),\n    },\n    {\n      title: \"实际市值\",\n      dataIndex: \"real\",\n      render: (text) => text.toFixed(2),\n    },\n  ];\n\n  const columnsExchangeDetails = [\n    {\n      title: \"日期\",\n      dataIndex: \"datetime\",\n      key: \"datetime\",\n      render: (text) => dayjs(text * 1000).format(\"YYYY-MM-DD hh:mm:ss\"),\n    },\n    {\n      title: \"金额\",\n      dataIndex: \"Value\",\n      key: \"Value\",\n      render: (text, row, index) => {\n        const { price, amount } = row;\n        const result = Number(price) * Number(amount);\n        return (\n          <span className={getNumberColor(result)}>\n            {isNaN(result)\n              ? \"--\"\n              : getNumberFormat(getNumberWithDecimal(result, 1))}\n          </span>\n        );\n      },\n    },\n    {\n      title: \"净值\",\n      dataIndex: \"price\",\n      key: \"price\",\n      render: (text) => {\n        return <span>{getNumberWithDecimal(text, 4)}</span>;\n      },\n    },\n    {\n      title: \"份额\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (text) => {\n        const result = Number(text);\n        return (\n          <span className={getNumberColor(result)}>\n            {isNaN(result)\n              ? \"--\"\n              : getNumberFormat(getNumberWithDecimal(result, 1))}\n          </span>\n        );\n      },\n    },\n  ];\n\n  const dataSource = (data) => {\n    if (data.length > 0) {\n      const result = data.reduce((acc, curr, index, arr) => {\n        const obj = {\n          date: dayjs(curr[0] * 1000).format(\"YYYY-MM-DD hh:mm:ss\"),\n          value:\n            index === 0 ? \"--\" : getNumberWithDecimal(arr[index - 1][1], 4),\n          cost: curr[2],\n          share: getNumberWithDecimal(curr[3], 0),\n          key: curr[0],\n          incomeValue: getNumberWithDecimal(curr[9], 2),\n          marketValue: getNumberWithDecimal(curr[7], 1),\n        };\n        return [...acc, obj];\n      }, []);\n      return result;\n    } else {\n      return [];\n    }\n  };\n  const getLastestDataHandleValue = (data) => {\n    const len = data.length;\n    return len > 0 ? getNumberWithDecimal(data[len - 1][7], 4) : \"--\";\n  };\n  const getLastestDataCost = (data) => {\n    const len = data.length;\n    return len > 0 ? data[len - 1][2] : 0;\n  };\n  const getLastestDataShare = (data) => {\n    const len = data.length;\n    return len > 0 ? data[len - 1][3] : 0;\n  };\n\n  return (\n    <Layout className={className}>\n      <Divider className=\"divider\" />\n      <Content>\n        <Row gutter={24} className=\"content\">\n          <Col sm={24} xs={24}>\n            <Card title={`${user} T1 策略持仓`}>\n              <Row style={{ marginBottom: \"24px\" }}>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓市值（USD）\"\n                    value={getLastestDataHandleValue(personData)}\n                    precision={0}\n                  />\n                </Col>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓收益（USD）\"\n                    value={\n                      personData.length > 0\n                        ? personData[personData.length - 1][4] +\n                          personData[personData.length - 1][10]\n                        : 0\n                    }\n                    precision={1}\n                    isNormal={false}\n                  />\n                </Col>\n                <Col sm={4} xs={12}>\n                  <Statistic\n                    title=\"持仓收益率\"\n                    value={\n                      personData.length > 0\n                        ? personData[personData.length - 1][8] * 100\n                        : 0\n                    }\n                    precision={2}\n                    suffix=\"%\"\n                    isNormal={false}\n                  />\n                </Col>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓份额\"\n                    value={getLastestDataShare(personData)}\n                    precision={0}\n                  />\n                </Col>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓成本(USD)\"\n                    value={getLastestDataCost(personData)}\n                    precision={4}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={24} className=\"card-left\">\n                  {<LineChart option={option} showLoading={isLoading} />}\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24} className=\"content\">\n          <Col sm={12} xs={24}>\n            <Card title=\"收益明细\">\n              <Table\n                columns={columns}\n                dataSource={dataSource([...personData].reverse())}\n              />\n            </Card>\n          </Col>\n          <Col sm={12} xs={24}>\n            <Card title=\"交易明细\">\n              <Table columns={columnsExchangeDetails} dataSource={dw} />\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport const Details = styled(DetailsComponent)`\n  .p-24 {\n    padding: 24px;\n  }\n  .m-t-24 {\n    margin-top: 24px;\n  }\n  .m-b-24 {\n    margin-bottom: 24px;\n  }\n  .divider {\n    border-color: #000;\n    opacity: 0.8;\n    margin: 0;\n  }\n  .content {\n    padding-top: 40px;\n    max-width: 1120px;\n    margin: 0 auto !important;\n  }\n\n  .green {\n    color: #3f8600;\n  }\n  .red {\n    color: #cf1322;\n  }\n  .grey {\n    color: rgba(19, 24, 31, 0.6);\n  }\n`;\n"],"sourceRoot":""}