{"version":3,"sources":["pages/Info/Info.js"],"names":["Content","DetailsComponent","className","useState","unrealizedDividend","setUnrealizedDividend","userTable","setUserTable","userPie","setUserPie","userUnrealizedDividendSeries","setUserUnrealizedDividendSeries","usersList","setUsersList","useEffect","a","Promise","all","axios","get","unrealized_dividend","data","user_unrealized_dividend","user_table","length","unrealizedDividendValue","getNumberWithDecimal","userUnrealizedDividendResult","Object","keys","userTableData","map","item","name","total","unrealizedPnl","unrealizedAllocation","real","userDataPie","x","value","userTableDataTotal","reduce","acc","curr","series","step","prefix","Array","from","i","type","areaStyle","stack","showSymbol","hoverAnimation","lineStyle","width","fetchT1","userOption","baseOption","title","text","textStyle","fontSize","tooltip","trigger","axisPointer","label","backgroundColor","legend","right","top","grid","left","bottom","containLabel","xAxis","boundaryGap","splitLine","show","axisLine","color","yAxis","axisLabel","formatter","splitNumber","media","query","maxWidth","option","optionPie","orient","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","gutter","sm","xs","style","marginBottom","precision","columns","dataIndex","render","toFixed","sorter","b","dataSource","Info","styled"],"mappings":"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","file":"static/js/8.79ac1fc0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Layout, Row, Divider, Card, Col, Table } from \"antd\";\nimport axios from \"axios\";\nimport echarts from \"echarts\";\nimport styled from \"styled-components\";\nimport { getNumberWithDecimal } from \"../../utils\";\nimport { Statistic, LineChart } from \"../../components\";\n\nconst { Content } = Layout;\n\nexport const DetailsComponent = ({ className }) => {\n  const [unrealizedDividend, setUnrealizedDividend] = useState(\"--\");\n  const [userTable, setUserTable] = useState([]);\n  const [userPie, setUserPie] = useState([]);\n  const [\n    userUnrealizedDividendSeries,\n    setUserUnrealizedDividendSeries,\n  ] = useState([]);\n  const [usersList, setUsersList] = useState([]);\n  useEffect(() => {\n    const fetchT1 = async () => {\n      const [\n        { data: unrealized_dividend },\n        { data: user_unrealized_dividend },\n        { data: user_table },\n      ] = await Promise.all([\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/unrealized_dividend.json`\n        ),\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/user_unrealized_dividend.json`\n        ),\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/user_table.json`\n        ),\n      ]);\n      if (unrealized_dividend.length > 0) {\n        const unrealizedDividendValue = getNumberWithDecimal(\n          unrealized_dividend[unrealized_dividend.length - 1][1],\n          1\n        );\n        setUnrealizedDividend(unrealizedDividendValue);\n      }\n      const userUnrealizedDividendResult = Object.keys(\n        user_unrealized_dividend\n      );\n      const userTable = Object.keys(user_table);\n      setUsersList(userTable);\n      const userTableData = userTable.map((item) => {\n        const data = user_table[item];\n        return {\n          name: item,\n          total: data[0],\n          unrealizedPnl: data[1],\n          unrealizedAllocation: data[2],\n          real: data[3],\n        };\n      });\n      const userDataPie = userTableData.map((x) => {\n        return {\n          value: x.total,\n          name: x.name,\n        };\n      });\n      const userTableDataTotal = userTableData.reduce(\n        (acc, curr) => {\n          return {\n            name: \"all\",\n            total: acc.total + curr.total,\n            unrealizedPnl: acc.unrealizedPnl + curr.unrealizedPnl,\n            unrealizedAllocation:\n              acc.unrealizedAllocation + curr.unrealizedAllocation,\n            real: acc.real + curr.real,\n          };\n        },\n        {\n          name: \"all\",\n          total: 0,\n          unrealizedPnl: 0,\n          unrealizedAllocation: 0,\n          real: 0,\n        }\n      );\n      const series = userUnrealizedDividendResult.map((item) => {\n        const data = user_unrealized_dividend[item];\n        const step = (data[0][0] - 1609674041) / 60 / 60 / 24;\n        const prefix = Array.from({ length: step }, (x, i) => [\n          1609674041 + i * 24 * 60 * 60,\n          0,\n        ]);\n        return {\n          name: item,\n          type: \"line\",\n          areaStyle: {},\n          data: [...prefix, ...data].map((x) => [\n            x[0] * 1000,\n            getNumberWithDecimal(x[1], 1),\n          ]),\n          stack: \"userUnrealizedDividend\",\n          showSymbol: false,\n          hoverAnimation: true,\n          lineStyle: {\n            width: 0,\n          },\n        };\n      });\n      setUserTable([...userTableData, userTableDataTotal]);\n      setUserUnrealizedDividendSeries(series);\n      setUserPie(userDataPie);\n    };\n    fetchT1();\n  }, []);\n\n  const userOption = {\n    baseOption: {\n      title: {\n        text: \"待分配利润\",\n        textStyle: {\n          fontSize: 20,\n        },\n      },\n      series: userUnrealizedDividendSeries,\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\",\n          label: {\n            backgroundColor: \"#6a7985\",\n          },\n        },\n      },\n      legend: {\n        right: 0,\n        top: 3,\n      },\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true,\n      },\n      xAxis: {\n        type: \"time\",\n        boundaryGap: false,\n        splitLine: {\n          show: false,\n        },\n        axisLine: {\n          lineStyle: {\n            color: \"#888\",\n          },\n        },\n      },\n      yAxis: {\n        type: \"value\",\n        axisLabel: {\n          show: true,\n          formatter: \"{value}\",\n        },\n        splitNumber: 3,\n        axisLine: {\n          lineStyle: {\n            color: \"#888\",\n          },\n        },\n      },\n    },\n    media: [\n      {\n        query: {\n          maxWidth: 760,\n        },\n        option: {\n          title: {\n            text: \"待分配利润\",\n            textStyle: {\n              fontSize: 12,\n            },\n          },\n          series: userUnrealizedDividendSeries,\n          tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n              type: \"cross\",\n              label: {\n                backgroundColor: \"#6a7985\",\n              },\n            },\n          },\n          legend: {\n            right: 0,\n            top: 3,\n          },\n          grid: {\n            left: \"3%\",\n            right: \"4%\",\n            bottom: \"3%\",\n            containLabel: true,\n          },\n          xAxis: {\n            type: \"time\",\n            boundaryGap: false,\n            splitLine: {\n              show: false,\n            },\n            axisLine: {\n              lineStyle: {\n                color: \"#888\",\n              },\n            },\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              show: true,\n              formatter: \"{value}\",\n            },\n            splitNumber: 3,\n            axisLine: {\n              lineStyle: {\n                color: \"#888\",\n              },\n            },\n          },\n        },\n      },\n    ],\n  };\n\n  const userTableColumns = [\n    {\n      title: \"用户\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"总市值\",\n      dataIndex: \"total\",\n      render: (text) => text.toFixed(2),\n      sorter: (a, b) => a.total - b.total,\n    },\n    {\n      title: \"未实现盈亏\",\n      dataIndex: \"unrealizedPnl\",\n      render: (text) => text.toFixed(2),\n    },\n    {\n      title: \"未分配收益\",\n      dataIndex: \"unrealizedAllocation\",\n      render: (text) => text.toFixed(2),\n    },\n    {\n      title: \"实际市值\",\n      dataIndex: \"real\",\n      render: (text) => text.toFixed(2),\n    },\n  ];\n\n  const optionPie = {\n    tooltip: {\n      trigger: \"item\",\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n    },\n    legend: {\n      orient: \"vertical\",\n      left: \"left\",\n      data: usersList,\n    },\n    series: [\n      {\n        name: \"总市值\",\n        type: \"pie\",\n        radius: \"55%\",\n        center: [\"50%\", \"60%\"],\n        data: userPie,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\n          },\n        },\n      },\n    ],\n  };\n\n  return (\n    <Layout className={className}>\n      <Divider className=\"divider\" />\n      <Content>\n        <Row gutter={24} className=\"content\">\n          <Col sm={24} xs={24}>\n            <Card title=\"T1 利润分配\">\n              <Row style={{ marginBottom: \"24px\" }}>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"待分配利润（USD）\"\n                    value={unrealizedDividend}\n                    precision={0}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={24} className=\"card-left\">\n                  {<LineChart option={userOption} />}\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24} className=\"content\">\n          <Col sm={24} xs={24}>\n            <Card title=\"收益明细\">\n              <Table columns={userTableColumns} dataSource={userTable} />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24} className=\"content\">\n          <Col sm={24} xs={24}>\n            <Card title=\"总市值\">\n              <LineChart option={optionPie} />\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport const Info = styled(DetailsComponent)`\n  .p-24 {\n    padding: 24px;\n  }\n  .m-t-24 {\n    margin-top: 24px;\n  }\n  .m-b-24 {\n    margin-bottom: 24px;\n  }\n  .divider {\n    border-color: #000;\n    opacity: 0.8;\n    margin: 0;\n  }\n  .content {\n    padding-top: 40px;\n    max-width: 1120px;\n    margin: 0 auto !important;\n  }\n\n  .green {\n    color: #3f8600;\n  }\n  .red {\n    color: #cf1322;\n  }\n  .grey {\n    color: rgba(19, 24, 31, 0.6);\n  }\n`;\n"],"sourceRoot":""}