{"version":3,"sources":["pages/Info/Info.js"],"names":["Content","DetailsComponent","className","useState","unrealizedDividend","setUnrealizedDividend","userTable","setUserTable","userPie","setUserPie","userUnrealizedDividendSeries","setUserUnrealizedDividendSeries","usersList","setUsersList","useEffect","length","find","x","name","unrealizedAllocation","toFixed","a","Promise","all","axios","get","user_unrealized_dividend","data","user_table","userUnrealizedDividendResult","Object","keys","userTableData","map","item","total","unrealizedPnl","real","userDataPie","value","userTableDataTotal","reduce","acc","curr","series","step","prefix","Array","from","i","type","areaStyle","getNumberWithDecimal","stack","showSymbol","hoverAnimation","lineStyle","width","fetchT1","userOption","baseOption","title","text","textStyle","fontSize","tooltip","trigger","axisPointer","label","backgroundColor","legend","right","top","grid","left","bottom","containLabel","xAxis","boundaryGap","splitLine","show","axisLine","color","yAxis","axisLabel","formatter","splitNumber","media","query","maxWidth","option","userTableColumns","dataIndex","render","href","sorter","b","optionPie","orient","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","gutter","sm","xs","style","marginBottom","precision","columns","dataSource","Info","styled"],"mappings":"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","file":"static/js/7.6b4a9727.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Layout, Row, Divider, Card, Col, Table } from \"antd\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { getNumberWithDecimal } from \"../../utils\";\nimport { Statistic, LineChart } from \"../../components\";\n\nconst { Content } = Layout;\n\nexport const DetailsComponent = ({ className }) => {\n  const [unrealizedDividend, setUnrealizedDividend] = useState(\"--\");\n  const [userTable, setUserTable] = useState([]);\n  const [userPie, setUserPie] = useState([]);\n  const [\n    userUnrealizedDividendSeries,\n    setUserUnrealizedDividendSeries,\n  ] = useState([]);\n  const [usersList, setUsersList] = useState([]);\n  useEffect(() => {\n    if(userTable.length > 0){\n      setUnrealizedDividend(userTable.find(x=>x.name === 'all').unrealizedAllocation.toFixed(0))\n    }\n  }, [userTable])\n  useEffect(() => {\n    const fetchT1 = async () => {\n      const [\n        { data: user_unrealized_dividend },\n        { data: user_table },\n      ] = await Promise.all([\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/user_unrealized_dividend.json`\n        ),\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/user_table.json`\n        ),\n      ]);\n      const userUnrealizedDividendResult = Object.keys(\n        user_unrealized_dividend\n      );\n      const userTable = Object.keys(user_table);\n      setUsersList(userTable);\n      const userTableData = userTable.map((item) => {\n        const data = user_table[item];\n        return {\n          name: item,\n          total: data[0],\n          unrealizedPnl: data[1],\n          unrealizedAllocation: data[2],\n          real: data[3],\n        };\n      });\n      const userDataPie = userTableData.map((x) => {\n        return {\n          value: x.total,\n          name: x.name,\n        };\n      });\n      const userTableDataTotal = userTableData.reduce(\n        (acc, curr) => {\n          return {\n            name: \"all\",\n            total: acc.total + curr.total,\n            unrealizedPnl: acc.unrealizedPnl + curr.unrealizedPnl,\n            unrealizedAllocation:\n              acc.unrealizedAllocation + curr.unrealizedAllocation,\n            real: acc.real + curr.real,\n          };\n        },\n        {\n          name: \"all\",\n          total: 0,\n          unrealizedPnl: 0,\n          unrealizedAllocation: 0,\n          real: 0,\n        }\n      );\n      const series = userUnrealizedDividendResult.map((item) => {\n        const data = user_unrealized_dividend[item];\n        const step = (data[0][0] - 1609674041) / 60 / 60 / 24;\n        const prefix = Array.from({ length: step }, (x, i) => [\n          1609674041 + i * 24 * 60 * 60,\n          0,\n        ]);\n        return {\n          name: item,\n          type: \"line\",\n          areaStyle: {},\n          data: [...prefix, ...data].map((x) => [\n            x[0] * 1000,\n            getNumberWithDecimal(x[1], 1),\n          ]),\n          stack: \"userUnrealizedDividend\",\n          showSymbol: false,\n          hoverAnimation: true,\n          lineStyle: {\n            width: 0,\n          },\n        };\n      });\n      setUserTable([...userTableData, userTableDataTotal]);\n      setUserUnrealizedDividendSeries(series);\n      setUserPie(userDataPie);\n    };\n    fetchT1();\n  }, []);\n  const userOption = {\n    baseOption: {\n      title: {\n        text: \"待分配利润\",\n        textStyle: {\n          fontSize: 20,\n        },\n      },\n      series: userUnrealizedDividendSeries,\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\",\n          label: {\n            backgroundColor: \"#6a7985\",\n          },\n        },\n      },\n      legend: {\n        right: 0,\n        top: 3,\n      },\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true,\n      },\n      xAxis: {\n        type: \"time\",\n        boundaryGap: false,\n        splitLine: {\n          show: false,\n        },\n        axisLine: {\n          lineStyle: {\n            color: \"#888\",\n          },\n        },\n      },\n      yAxis: {\n        type: \"value\",\n        axisLabel: {\n          show: true,\n          formatter: \"{value}\",\n        },\n        splitNumber: 3,\n        axisLine: {\n          lineStyle: {\n            color: \"#888\",\n          },\n        },\n      },\n    },\n    media: [\n      {\n        query: {\n          maxWidth: 760,\n        },\n        option: {\n          title: {\n            text: \"待分配利润\",\n            textStyle: {\n              fontSize: 12,\n            },\n          },\n          series: userUnrealizedDividendSeries,\n          tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n              type: \"cross\",\n              label: {\n                backgroundColor: \"#6a7985\",\n              },\n            },\n          },\n          legend: {\n            right: 0,\n            top: 3,\n          },\n          grid: {\n            left: \"3%\",\n            right: \"4%\",\n            bottom: \"3%\",\n            containLabel: true,\n          },\n          xAxis: {\n            type: \"time\",\n            boundaryGap: false,\n            splitLine: {\n              show: false,\n            },\n            axisLine: {\n              lineStyle: {\n                color: \"#888\",\n              },\n            },\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              show: true,\n              formatter: \"{value}\",\n            },\n            splitNumber: 3,\n            axisLine: {\n              lineStyle: {\n                color: \"#888\",\n              },\n            },\n          },\n        },\n      },\n    ],\n  };\n\n  const userTableColumns = [\n    {\n      title: \"用户\",\n      dataIndex: \"name\",\n      render: (text) => <a href={`/#/account/${text}`}>{text}</a>,\n    },\n    {\n      title: \"总市值\",\n      dataIndex: \"total\",\n      render: (text) => text.toFixed(2),\n      sorter: (a, b) => a.total - b.total,\n    },\n    {\n      title: \"未实现盈亏\",\n      dataIndex: \"unrealizedPnl\",\n      render: (text) => text.toFixed(2),\n      sorter: (a, b) => a.unrealizedPnl - b.unrealizedPnl,\n    },\n    {\n      title: \"未分配收益\",\n      dataIndex: \"unrealizedAllocation\",\n      render: (text) => text.toFixed(2),\n      sorter: (a, b) => a.unrealizedAllocation - b.unrealizedAllocation,\n    },\n    {\n      title: \"实际市值\",\n      dataIndex: \"real\",\n      render: (text) => text.toFixed(2),\n      sorter: (a, b) => a.real - b.real,\n    },\n  ];\n\n  const optionPie = {\n    tooltip: {\n      trigger: \"item\",\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n    },\n    legend: {\n      orient: \"vertical\",\n      left: \"left\",\n      data: usersList,\n    },\n    series: [\n      {\n        name: \"总市值\",\n        type: \"pie\",\n        radius: \"55%\",\n        center: [\"50%\", \"60%\"],\n        data: userPie,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\n          },\n        },\n      },\n    ],\n  };\n\n  return (\n    <Layout className={className}>\n      <Divider className=\"divider\" />\n      <Content>\n        <Row gutter={24} className=\"content\">\n          <Col sm={12} xs={24}>\n            <Card title=\"T1 利润分配\">\n              <Row style={{ marginBottom: \"24px\" }}>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"待分配利润（USD）\"\n                    value={unrealizedDividend}\n                    precision={0}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={24} className=\"card-left\">\n                  {<LineChart option={userOption} />}\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col sm={12} xs={24}>\n            <Card title=\"总市值\">\n              <LineChart option={optionPie} />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24} className=\"content\">\n          <Col sm={24} xs={24}>\n            <Card title=\"收益明细\">\n              <Table columns={userTableColumns} dataSource={userTable} />\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport const Info = styled(DetailsComponent)`\n  .p-24 {\n    padding: 24px;\n  }\n  .m-t-24 {\n    margin-top: 24px;\n  }\n  .m-b-24 {\n    margin-bottom: 24px;\n  }\n  .divider {\n    border-color: #000;\n    opacity: 0.8;\n    margin: 0;\n  }\n  .content {\n    padding-top: 40px;\n    margin: 0 auto !important;\n  }\n\n  .green {\n    color: #3f8600;\n  }\n  .red {\n    color: #cf1322;\n  }\n  .grey {\n    color: rgba(19, 24, 31, 0.6);\n  }\n`;\n"],"sourceRoot":""}