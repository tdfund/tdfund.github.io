{"version":3,"sources":["pages/Details/Details.js"],"names":["Content","DetailsComponent","className","useState","personData","setPersonData","setIncomeValue","dw","setDw","isLoading","setIsLoading","unRealizedPnl","setUnrealizedPnl","fundPnl","setFundPnl","unrealizedDividend","setUnrealizedDividend","userUnrealizedDividendSeries","setUserUnrealizedDividendSeries","user","useParams","useEffect","fetchCharts","a","Promise","all","axios","get","person","data","dwData","reverse","map","item","i","key","unrealizedPnlResult","x","getNumberWithDecimal","fundPnlResult","incomeValue","unrealized_dividend","user_unrealized_dividend","length","unrealizedDividendValue","userUnrealizedDividendResult","Object","keys","series","step","prefix","Array","from","name","type","areaStyle","stack","showSymbol","hoverAnimation","lineStyle","width","fetchT1","userOption","baseOption","title","text","textStyle","fontSize","tooltip","trigger","axisPointer","label","backgroundColor","legend","right","top","grid","left","bottom","containLabel","xAxis","boundaryGap","splitLine","show","axisLine","color","yAxis","axisLabel","formatter","splitNumber","media","query","maxWidth","option","getNumberFormat","itemStyle","columns","dataIndex","render","row","index","isNaN","toLocaleString","getNumberColor","columnsExchangeDetails","dayjs","format","price","amount","result","Number","gutter","sm","xs","style","marginBottom","value","precision","showLoading","len","getLastestDataHandleValue","isNormal","suffix","getLastestDataShare","getLastestDataCost","dataSource","reduce","acc","curr","arr","obj","date","cost","share","marketValue","Details","styled"],"mappings":"q+BAcQA,E,IAAAA,QAEKC,EAAmB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,OAEXF,mBAAS,IAFE,mBAE7BG,GAF6B,aAG7BH,mBAAS,IAHoB,mBAG1CI,EAH0C,KAGtCC,EAHsC,OAIfL,oBAAS,GAJM,mBAI1CM,EAJ0C,KAI/BC,EAJ+B,OAKPP,mBAAS,IALF,mBAK1CQ,EAL0C,KAK3BC,EAL2B,OAMnBT,mBAAS,IANU,mBAM1CU,EAN0C,KAMjCC,EANiC,OAOGX,mBAAS,MAPZ,mBAO1CY,EAP0C,KAOtBC,EAPsB,OAW7Cb,mBAAS,IAXoC,mBAS/Cc,EAT+C,KAU/CC,EAV+C,KAYzCC,EAASC,cAATD,KACRE,qBAAU,WACR,IAAMC,EAAW,uCAAG,wCAAAC,EAAA,sEACiCC,QAAQC,IAAI,CAC7DC,IAAMC,IAAN,2EACsER,EADtE,eAGAO,IAAMC,IAAN,2EACsER,EADtE,eALgB,mCACHS,EADG,KACTC,KAAwBC,EADf,KACSD,KAQ3BxB,EAAcuB,GACdpB,EACE,YAAIsB,GAAQC,UAAUC,KAAI,SAACC,EAAMC,GAC/B,OAAO,2BACFD,GADL,IAEEE,IAAKD,QAKLE,EAAsBR,EAAOI,KAAI,SAACK,EAAGH,GACzC,MAAO,CAAgB,IAAfN,EAAOM,GAAG,GAAWI,YAAqBV,EAAOM,GAAG,GAAI,OAG5DK,EAAgBX,EAAOI,KAAI,SAACK,EAAGH,GACnC,MAAO,CAAgB,IAAfN,EAAOM,GAAG,GAAWI,YAAqBV,EAAOM,GAAG,IAAK,OAE7DM,EAAcZ,EAAOI,KAAI,SAACK,EAAGH,GACjC,MAAO,CAAgB,IAAfN,EAAOM,GAAG,GAAWI,YAAqBV,EAAOM,GAAG,GAAI,OAElEtB,EAAiBwB,GACjBtB,EAAWyB,GACX7B,GAAa,GACbJ,EAAekC,GAhCG,4CAAH,qDAmFJ,OAATrB,GAhDS,uCAAG,wCAAAI,EAAA,sEAIJC,QAAQC,IAAI,CACpBC,IAAMC,IAAN,uFAGAD,IAAMC,IAAN,8FARY,mCAEJc,EAFI,KAEVZ,KACMa,EAHI,KAGVb,KASAY,EAAoBE,OAAS,IACzBC,EAA0BN,YAC9BG,EAAoBA,EAAoBE,OAAS,GAAG,GACpD,GAEF3B,EAAsB4B,IAElBC,EAA+BC,OAAOC,KAC1CL,GAEIM,EAASH,EAA6Bb,KAAI,SAACC,GAC/C,IAAMJ,EAAOa,EAAyBT,GAChCgB,GAAQpB,EAAK,GAAG,GAAK,YAAc,GAAK,GAAK,GAC7CqB,EAASC,MAAMC,KAAK,CAAET,OAAQM,IAAQ,SAACZ,EAAGH,GAAJ,MAAU,CACpD,WAAiB,GAAJA,EAAS,GAAK,GAC3B,MAEF,MAAO,CACLmB,KAAMpB,EACNqB,KAAM,OACNC,UAAW,GACX1B,KAAM,sBAAIqB,GAAJ,YAAerB,IAAMG,KAAI,SAACK,GAAD,MAAO,CAC7B,IAAPA,EAAE,GACFC,YAAqBD,EAAE,GAAI,OAE7BmB,MAAO,yBACPC,YAAY,EACZC,gBAAgB,EAChBC,UAAW,CACTC,MAAO,OAKb1C,EAAgC8B,GA9ClB,4CAAH,oDAiDXa,GAEFvC,MACC,CAACH,IAEJ,IA0SoBU,EA1SdiC,GAAa,CACjBC,WAAY,CACVC,MAAO,CACLC,KAAM,iCACNC,UAAW,CACTC,SAAU,KAGdnB,OAAQ/B,EACRmD,QAAS,CACPC,QAAS,OACTC,YAAa,CACXhB,KAAM,QACNiB,MAAO,CACLC,gBAAiB,aAIvBC,OAAQ,CACNC,MAAO,EACPC,IAAK,GAEPC,KAAM,CACJC,KAAM,KACNH,MAAO,KACPI,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACL1B,KAAM,OACN2B,aAAa,EACbC,UAAW,CACTC,MAAM,GAERC,SAAU,CACRzB,UAAW,CACT0B,MAAO,UAIbC,MAAO,CACLhC,KAAM,QACNiC,UAAW,CACTJ,MAAM,EACNK,UAAW,WAEbC,YAAa,EACbL,SAAU,CACRzB,UAAW,CACT0B,MAAO,WAKfK,MAAO,CACL,CACEC,MAAO,CACLC,SAAU,KAEZC,OAAQ,CACN7B,MAAO,CACLC,KAAM,iCACNC,UAAW,CACTC,SAAU,KAGdnB,OAAQ/B,EACRmD,QAAS,CACPC,QAAS,OACTC,YAAa,CACXhB,KAAM,QACNiB,MAAO,CACLC,gBAAiB,aAIvBC,OAAQ,CACNC,MAAO,EACPC,IAAK,GAEPC,KAAM,CACJC,KAAM,KACNH,MAAO,KACPI,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACL1B,KAAM,OACN2B,aAAa,EACbC,UAAW,CACTC,MAAM,GAERC,SAAU,CACRzB,UAAW,CACT0B,MAAO,UAIbC,MAAO,CACLhC,KAAM,QACNiC,UAAW,CACTJ,MAAM,EACNK,UAAW,WAEbC,YAAa,EACbL,SAAU,CACRzB,UAAW,CACT0B,MAAO,cASfQ,GAAS,CACb7B,MAAO,CACLC,KAAM,4BAERG,QAAS,CACPC,QAAS,QAaXI,OAAQ,CACN5C,KAAM,CACJ,CACEwB,KAAM,8CAIR,CACEA,KAAM,yCAKVmC,UAAW,SAACnC,GACV,MAAa,+CAATA,EAC8B,IAAzB1C,EAAcgC,OAAd,UACAU,EADA,mBAEAA,EAFA,YAEQyC,YACTnF,EAAcA,EAAcgC,OAAS,GAAG,KAGnC,yCAATU,EACwB,IAAnBxC,EAAQ8B,OAAR,UACAU,EADA,mBAEAA,EAFA,YAEQyC,YAAgBjF,EAAQA,EAAQ8B,OAAS,GAAG,UAH7D,GAMF+B,MAAO,EACPC,IAAK,GAEPC,KAAM,CACJC,KAAM,KACNH,MAAO,KACPI,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACL1B,KAAM,OACN4B,UAAW,CACTC,MAAM,GAERC,SAAU,CACRzB,UAAW,CACT0B,MAAO,UAIbC,MAAO,CACLhC,KAAM,QACNiC,UAAW,CACTJ,MAAM,EACNK,UAAW,WAEbC,YAAa,EACbL,SAAU,CACRzB,UAAW,CACT0B,MAAO,UAIbrC,OAAQ,CACN,CACEK,KAAM,6CACNC,KAAM,OACNC,UAAW,GACX1B,KAAMlB,EACNoF,UAAW,CACTV,MAAO,mBAET7B,MAAO,eACPC,YAAY,EACZC,gBAAgB,GAElB,CACEL,KAAM,uCACNC,KAAM,OACNC,UAAW,GACX1B,KAAMhB,EACNkF,UAAW,CACTV,MAAO,oBAET7B,MAAO,eACPC,YAAY,EACZC,gBAAgB,KAKhBsC,GAAU,CACd,CACEhC,MAAO,eACPiC,UAAW,OACX9D,IAAK,QAEP,CACE6B,MAAO,eACPiC,UAAW,cACX9D,IAAK,cACL+D,OAAQ,SAACjC,EAAMkC,EAAKC,GAClB,OAAOC,MAAMpC,GACT,KACA3B,YAAqB2B,EAAM,GAAGqC,mBAGtC,CACEtC,MAAO,qBACPiC,UAAW,cACX9D,IAAK,cACL+D,OAAQ,SAACjC,GACP,OACE,0BAAM/D,UAAWqG,YAAetC,IAAQ6B,YAAgB7B,OAM1DuC,GAAyB,CAC7B,CACExC,MAAO,eACPiC,UAAW,WACX9D,IAAK,WACL+D,OAAQ,SAACjC,GAAD,OAAUwC,IAAa,IAAPxC,GAAayC,OAAO,yBAE9C,CACE1C,MAAO,eACPiC,UAAW,QACX9D,IAAK,QACL+D,OAAQ,SAACjC,EAAMkC,EAAKC,GAAW,IACrBO,EAAkBR,EAAlBQ,MAAOC,EAAWT,EAAXS,OACTC,EAASC,OAAOH,GAASG,OAAOF,GACtC,OACE,0BAAM1G,UAAWqG,YAAeM,IAC7BR,MAAMQ,GACH,KACAf,YAAgBxD,YAAqBuE,EAAQ,OAKzD,CACE7C,MAAO,eACPiC,UAAW,QACX9D,IAAK,QACL+D,OAAQ,SAACjC,GACP,OAAO,8BAAO3B,YAAqB2B,EAAM,MAG7C,CACED,MAAO,eACPiC,UAAW,SACX9D,IAAK,SACL+D,OAAQ,SAACjC,GACP,IAAM4C,EAASC,OAAO7C,GACtB,OACE,0BAAM/D,UAAWqG,YAAeM,IAC7BR,MAAMQ,GACH,KACAf,YAAgBxD,YAAqBuE,EAAQ,QAwC3D,OACE,uBAAQ3G,UAAWA,GACjB,uBAASA,UAAU,YACnB,kBAACF,EAAD,KACY,OAATmB,EACC,uBAAK4F,OAAQ,GAAI7G,UAAU,WACzB,uBAAK8G,GAAI,GAAIC,GAAI,IACf,uBAAMjD,MAAM,+BACV,uBAAKkD,MAAO,CAAEC,aAAc,SAC1B,uBAAKH,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEjD,MAAM,gDACNoD,MAAOrG,EACPsG,UAAW,MAIjB,2BACE,uBAAKJ,GAAI,GAAI/G,UAAU,aACpB,kBAAC,IAAD,CAAW2F,OAAQ/B,GAAYwD,YAAa7G,SAMrD,KACJ,uBAAKsG,OAAQ,GAAI7G,UAAU,WACzB,uBAAK8G,GAAI,GAAIC,GAAI,IACf,uBAAMjD,MAAK,UAAK7C,EAAL,iCACT,uBAAK+F,MAAO,CAAEC,aAAc,SAC1B,uBAAKH,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEjD,MAAM,0CACNoD,MA9CgB,SAACvF,GACjC,IAAM0F,EAAM1F,EAAKc,OACjB,OAAO4E,EAAM,EAAIjF,YAAqBT,EAAK0F,EAAM,GAAG,GAAI,GAAK,KA4CtCC,CAA0BpH,GACjCiH,UAAW,KAGf,uBAAKL,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEjD,MAAM,0CACNoD,MACEhH,EAAWuC,OAAS,EAChBvC,EAAWA,EAAWuC,OAAS,GAAG,GAClCvC,EAAWA,EAAWuC,OAAS,GAAG,IAClC,EAEN0E,UAAW,EACXI,UAAU,KAGd,uBAAKT,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEjD,MAAM,iCACNoD,MACEhH,EAAWuC,OAAS,EACuB,IAAvCvC,EAAWA,EAAWuC,OAAS,GAAG,GAClC,EAEN0E,UAAW,EACXK,OAAO,IACPD,UAAU,KAGd,uBAAKT,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEjD,MAAM,2BACNoD,MAvEU,SAACvF,GAC3B,IAAM0F,EAAM1F,EAAKc,OACjB,OAAO4E,EAAM,EAAI1F,EAAK0F,EAAM,GAAG,GAAK,EAqEbI,CAAoBvH,GAC3BiH,UAAW,KAGf,uBAAKL,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEjD,MAAM,gCACNoD,MAlFS,SAACvF,GAC1B,IAAM0F,EAAM1F,EAAKc,OACjB,OAAO4E,EAAM,EAAI1F,EAAK0F,EAAM,GAAG,GAAK,EAgFbK,CAAmBxH,GAC1BiH,UAAW,MAIjB,2BACE,uBAAKJ,GAAI,GAAI/G,UAAU,aACpB,kBAAC,IAAD,CAAW2F,OAAQA,GAAQyB,YAAa7G,SAMnD,uBAAKsG,OAAQ,GAAI7G,UAAU,WACzB,uBAAK8G,GAAI,GAAIC,GAAI,IACf,uBAAMjD,MAAM,4BACV,uBACEgC,QAASA,GACT6B,YA5HMhG,EA4HiB,YAAIzB,GAAY2B,UA3H/CF,EAAKc,OAAS,EACDd,EAAKiG,QAAO,SAACC,EAAKC,EAAM5B,EAAO6B,GAC5C,IAAMC,EAAM,CACVC,KAAM1B,IAAgB,IAAVuB,EAAK,IAAWtB,OAAO,uBACnCU,MACY,IAAVhB,EAAc,KAAO9D,YAAqB2F,EAAI7B,EAAQ,GAAG,GAAI,GAC/DgC,KAAMJ,EAAK,GACXK,MAAO/F,YAAqB0F,EAAK,GAAI,GACrC7F,IAAK6F,EAAK,GACVxF,YAAaF,YAAqB0F,EAAK,GAAI,GAC3CM,YAAahG,YAAqB0F,EAAK,GAAI,IAE7C,MAAM,GAAN,mBAAWD,GAAX,CAAgBG,MACf,IAGI,QA+GH,uBAAKlB,GAAI,GAAIC,GAAI,IACf,uBAAMjD,MAAM,4BACV,uBAAOgC,QAASQ,GAAwBqB,WAAYtH,UASrDgI,EAAUC,YAAOvI,EAAPuI,CAAH","file":"static/js/6.e21492cb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Layout, Row, Divider, Card, Col, Table } from \"antd\";\nimport axios from \"axios\";\nimport echarts from \"echarts\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\nimport {\n  getNumberColor,\n  getNumberFormat,\n  getNumberWithDecimal,\n} from \"../../utils\";\nimport { Statistic, LineChart } from \"../../components\";\n\nconst { Content } = Layout;\n\nexport const DetailsComponent = ({ className }) => {\n  const [personData, setPersonData] = useState([]);\n  const [incomeValue, setIncomeValue] = useState([]);\n  const [dw, setDw] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [unRealizedPnl, setUnrealizedPnl] = useState([]);\n  const [fundPnl, setFundPnl] = useState([]);\n  const [unrealizedDividend, setUnrealizedDividend] = useState(\"--\");\n  const [\n    userUnrealizedDividendSeries,\n    setUserUnrealizedDividendSeries,\n  ] = useState([]);\n  const { user } = useParams();\n  useEffect(() => {\n    const fetchCharts = async () => {\n      const [{ data: person }, { data: dwData }] = await Promise.all([\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/accounts/${user}/main.json`\n        ),\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/accounts/${user}/dw.json`\n        ),\n      ]);\n      setPersonData(person);\n      setDw(\n        [...dwData].reverse().map((item, i) => {\n          return {\n            ...item,\n            key: i,\n          };\n        })\n      );\n      //用户未实现收益\n      const unrealizedPnlResult = person.map((x, i) => {\n        return [person[i][0] * 1000, getNumberWithDecimal(person[i][4], 1)];\n      });\n      //策略分成收益\n      const fundPnlResult = person.map((x, i) => {\n        return [person[i][0] * 1000, getNumberWithDecimal(person[i][10], 1)];\n      });\n      const incomeValue = person.map((x, i) => {\n        return [person[i][0] * 1000, getNumberWithDecimal(person[i][6], 1)];\n      });\n      setUnrealizedPnl(unrealizedPnlResult);\n      setFundPnl(fundPnlResult);\n      setIsLoading(false);\n      setIncomeValue(incomeValue);\n    };\n\n    const fetchT1 = async () => {\n      const [\n        { data: unrealized_dividend },\n        { data: user_unrealized_dividend },\n      ] = await Promise.all([\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/unrealized_dividend.json`\n        ),\n        axios.get(\n          `https://raw.githubusercontent.com/odofmine/fund/main/t1/st/user_unrealized_dividend.json`\n        ),\n      ]);\n      if (unrealized_dividend.length > 0) {\n        const unrealizedDividendValue = getNumberWithDecimal(\n          unrealized_dividend[unrealized_dividend.length - 1][1],\n          1\n        );\n        setUnrealizedDividend(unrealizedDividendValue);\n      }\n      const userUnrealizedDividendResult = Object.keys(\n        user_unrealized_dividend\n      );\n      const series = userUnrealizedDividendResult.map((item) => {\n        const data = user_unrealized_dividend[item];\n        const step = (data[0][0] - 1588291200) / 60 / 60 / 24;\n        const prefix = Array.from({ length: step }, (x, i) => [\n          1588291200 + i * 24 * 60 * 60,\n          0,\n        ]);\n        return {\n          name: item,\n          type: \"line\",\n          areaStyle: {},\n          data: [...prefix, ...data].map((x) => [\n            x[0] * 1000,\n            getNumberWithDecimal(x[1], 1),\n          ]),\n          stack: \"userUnrealizedDividend\",\n          showSymbol: false,\n          hoverAnimation: true,\n          lineStyle: {\n            width: 0,\n          },\n        };\n      });\n\n      setUserUnrealizedDividendSeries(series);\n    };\n    if (user === \"t1\") {\n      fetchT1();\n    }\n    fetchCharts();\n  }, [user]);\n\n  const userOption = {\n    baseOption: {\n      title: {\n        text: \"待分配利润\",\n        textStyle: {\n          fontSize: 20,\n        },\n      },\n      series: userUnrealizedDividendSeries,\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\",\n          label: {\n            backgroundColor: \"#6a7985\",\n          },\n        },\n      },\n      legend: {\n        right: 0,\n        top: 3,\n      },\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true,\n      },\n      xAxis: {\n        type: \"time\",\n        boundaryGap: false,\n        splitLine: {\n          show: false,\n        },\n        axisLine: {\n          lineStyle: {\n            color: \"#888\",\n          },\n        },\n      },\n      yAxis: {\n        type: \"value\",\n        axisLabel: {\n          show: true,\n          formatter: \"{value}\",\n        },\n        splitNumber: 3,\n        axisLine: {\n          lineStyle: {\n            color: \"#888\",\n          },\n        },\n      },\n    },\n    media: [\n      {\n        query: {\n          maxWidth: 760,\n        },\n        option: {\n          title: {\n            text: \"待分配利润\",\n            textStyle: {\n              fontSize: 12,\n            },\n          },\n          series: userUnrealizedDividendSeries,\n          tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n              type: \"cross\",\n              label: {\n                backgroundColor: \"#6a7985\",\n              },\n            },\n          },\n          legend: {\n            right: 0,\n            top: 3,\n          },\n          grid: {\n            left: \"3%\",\n            right: \"4%\",\n            bottom: \"3%\",\n            containLabel: true,\n          },\n          xAxis: {\n            type: \"time\",\n            boundaryGap: false,\n            splitLine: {\n              show: false,\n            },\n            axisLine: {\n              lineStyle: {\n                color: \"#888\",\n              },\n            },\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              show: true,\n              formatter: \"{value}\",\n            },\n            splitNumber: 3,\n            axisLine: {\n              lineStyle: {\n                color: \"#888\",\n              },\n            },\n          },\n        },\n      },\n    ],\n  };\n\n  const option = {\n    title: {\n      text: \"持仓收益\",\n    },\n    tooltip: {\n      trigger: \"axis\",\n      // formatter: function (params) {\n      //   const date = new Date(params[0].data[0]);\n      //   const dateFormat = echarts.format.formatTime(\n      //     \"yyyy-MM-dd hh:mm:ss\",\n      //     date\n      //   );\n      //   var returnHtmT1 = params[0]\n      //     ? `${getNumberWithDecimal(params[0].data[1], 1)}`\n      //     : \"--\";\n      //   return `<span>${dateFormat}</span><br/><span>累计收益：${returnHtmT1}</span> <br/>`;\n      // },\n    },\n    legend: {\n      data: [\n        {\n          name: \"用户未实现收益\",\n          // 强制设置图形为圆。\n          // icon: \"circle\",\n        },\n        {\n          name: \"策略分成收益\",\n          // 强制设置图形为圆。\n          // icon: \"circle\",\n        },\n      ],\n      formatter: (name) => {\n        if (name === \"用户未实现收益\") {\n          return unRealizedPnl.length === 0\n            ? `${name} +0.0`\n            : `${name} ${getNumberFormat(\n                unRealizedPnl[unRealizedPnl.length - 1][1]\n              )}`;\n        }\n        if (name === \"策略分成收益\") {\n          return fundPnl.length === 0\n            ? `${name} +0.0`\n            : `${name} ${getNumberFormat(fundPnl[fundPnl.length - 1][1])}`;\n        }\n      },\n      right: 0,\n      top: 3,\n    },\n    grid: {\n      left: \"3%\",\n      right: \"4%\",\n      bottom: \"3%\",\n      containLabel: true,\n    },\n    xAxis: {\n      type: \"time\",\n      splitLine: {\n        show: false,\n      },\n      axisLine: {\n        lineStyle: {\n          color: \"#888\",\n        },\n      },\n    },\n    yAxis: {\n      type: \"value\",\n      axisLabel: {\n        show: true,\n        formatter: \"{value}\",\n      },\n      splitNumber: 3,\n      axisLine: {\n        lineStyle: {\n          color: \"#888\",\n        },\n      },\n    },\n    series: [\n      {\n        name: \"用户未实现收益\",\n        type: \"line\",\n        areaStyle: {},\n        data: unRealizedPnl,\n        itemStyle: {\n          color: \"rgb(73,151,247)\",\n        },\n        stack: \"总量\",\n        showSymbol: false,\n        hoverAnimation: true,\n      },\n      {\n        name: \"策略分成收益\",\n        type: \"line\",\n        areaStyle: {},\n        data: fundPnl,\n        itemStyle: {\n          color: \"rgb(105,193,111)\",\n        },\n        stack: \"总量\",\n        showSymbol: false,\n        hoverAnimation: true,\n      },\n    ],\n  };\n\n  const columns = [\n    {\n      title: \"日期\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    {\n      title: \"市值\",\n      dataIndex: \"marketValue\",\n      key: \"marketValue\",\n      render: (text, row, index) => {\n        return isNaN(text)\n          ? \"--\"\n          : getNumberWithDecimal(text, 1).toLocaleString();\n      },\n    },\n    {\n      title: \"收益额\",\n      dataIndex: \"incomeValue\",\n      key: \"incomeValue\",\n      render: (text) => {\n        return (\n          <span className={getNumberColor(text)}>{getNumberFormat(text)}</span>\n        );\n      },\n    },\n  ];\n\n  const columnsExchangeDetails = [\n    {\n      title: \"日期\",\n      dataIndex: \"datetime\",\n      key: \"datetime\",\n      render: (text) => dayjs(text * 1000).format(\"YYYY-MM-DD hh:mm:ss\"),\n    },\n    {\n      title: \"金额\",\n      dataIndex: \"Value\",\n      key: \"Value\",\n      render: (text, row, index) => {\n        const { price, amount } = row;\n        const result = Number(price) * Number(amount);\n        return (\n          <span className={getNumberColor(result)}>\n            {isNaN(result)\n              ? \"--\"\n              : getNumberFormat(getNumberWithDecimal(result, 1))}\n          </span>\n        );\n      },\n    },\n    {\n      title: \"净值\",\n      dataIndex: \"price\",\n      key: \"price\",\n      render: (text) => {\n        return <span>{getNumberWithDecimal(text, 4)}</span>;\n      },\n    },\n    {\n      title: \"份额\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (text) => {\n        const result = Number(text);\n        return (\n          <span className={getNumberColor(result)}>\n            {isNaN(result)\n              ? \"--\"\n              : getNumberFormat(getNumberWithDecimal(result, 1))}\n          </span>\n        );\n      },\n    },\n  ];\n\n  const dataSource = (data) => {\n    if (data.length > 0) {\n      const result = data.reduce((acc, curr, index, arr) => {\n        const obj = {\n          date: dayjs(curr[0] * 1000).format(\"YYYY-MM-DD hh:mm:ss\"),\n          value:\n            index === 0 ? \"--\" : getNumberWithDecimal(arr[index - 1][1], 4),\n          cost: curr[2],\n          share: getNumberWithDecimal(curr[3], 0),\n          key: curr[0],\n          incomeValue: getNumberWithDecimal(curr[9], 2),\n          marketValue: getNumberWithDecimal(curr[7], 1),\n        };\n        return [...acc, obj];\n      }, []);\n      return result;\n    } else {\n      return [];\n    }\n  };\n  const getLastestDataHandleValue = (data) => {\n    const len = data.length;\n    return len > 0 ? getNumberWithDecimal(data[len - 1][7], 4) : \"--\";\n  };\n  const getLastestDataCost = (data) => {\n    const len = data.length;\n    return len > 0 ? data[len - 1][2] : 0;\n  };\n  const getLastestDataShare = (data) => {\n    const len = data.length;\n    return len > 0 ? data[len - 1][3] : 0;\n  };\n\n  return (\n    <Layout className={className}>\n      <Divider className=\"divider\" />\n      <Content>\n        {user === \"t1\" ? (\n          <Row gutter={24} className=\"content\">\n            <Col sm={24} xs={24}>\n              <Card title=\"T1 利润分配\">\n                <Row style={{ marginBottom: \"24px\" }}>\n                  <Col sm={5} xs={12}>\n                    <Statistic\n                      title=\"待分配利润（USD）\"\n                      value={unrealizedDividend}\n                      precision={0}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={24} className=\"card-left\">\n                    {<LineChart option={userOption} showLoading={isLoading} />}\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        ) : null}\n        <Row gutter={24} className=\"content\">\n          <Col sm={24} xs={24}>\n            <Card title={`${user} T1 策略持仓`}>\n              <Row style={{ marginBottom: \"24px\" }}>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓市值（USD）\"\n                    value={getLastestDataHandleValue(personData)}\n                    precision={0}\n                  />\n                </Col>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓收益（USD）\"\n                    value={\n                      personData.length > 0\n                        ? personData[personData.length - 1][4] +\n                          personData[personData.length - 1][10]\n                        : 0\n                    }\n                    precision={1}\n                    isNormal={false}\n                  />\n                </Col>\n                <Col sm={4} xs={12}>\n                  <Statistic\n                    title=\"持仓收益率\"\n                    value={\n                      personData.length > 0\n                        ? personData[personData.length - 1][8] * 100\n                        : 0\n                    }\n                    precision={2}\n                    suffix=\"%\"\n                    isNormal={false}\n                  />\n                </Col>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓份额\"\n                    value={getLastestDataShare(personData)}\n                    precision={0}\n                  />\n                </Col>\n                <Col sm={5} xs={12}>\n                  <Statistic\n                    title=\"持仓成本(USD)\"\n                    value={getLastestDataCost(personData)}\n                    precision={4}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={24} className=\"card-left\">\n                  {<LineChart option={option} showLoading={isLoading} />}\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24} className=\"content\">\n          <Col sm={12} xs={24}>\n            <Card title=\"收益明细\">\n              <Table\n                columns={columns}\n                dataSource={dataSource([...personData].reverse())}\n              />\n            </Card>\n          </Col>\n          <Col sm={12} xs={24}>\n            <Card title=\"交易明细\">\n              <Table columns={columnsExchangeDetails} dataSource={dw} />\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport const Details = styled(DetailsComponent)`\n  .p-24 {\n    padding: 24px;\n  }\n  .m-t-24 {\n    margin-top: 24px;\n  }\n  .m-b-24 {\n    margin-bottom: 24px;\n  }\n  .divider {\n    border-color: #000;\n    opacity: 0.8;\n    margin: 0;\n  }\n  .content {\n    padding-top: 40px;\n    max-width: 1120px;\n    margin: 0 auto !important;\n  }\n\n  .green {\n    color: #3f8600;\n  }\n  .red {\n    color: #cf1322;\n  }\n  .grey {\n    color: rgba(19, 24, 31, 0.6);\n  }\n`;\n"],"sourceRoot":""}